/* Global Styles */

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Courier New', Courier, monospace;
}

img {
    width: 100%;
    /* Height does not take percentages for arguments */
    height: auto;
}

/* Flexbox simple row layouts */

/* Base styles */
.container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    /* some styles so we can see all of our containers */
    min-height: 400px;
    border: 1px solid purple;
    background-color: rgba(255, 0,255, .3);
}

.item {
    border: 1px solid purple;
    background-color: rgba(0,0,255,0.3);
    width: 23%;
    height: 300px;
}

/* Atomic Styles - small as possible and reusable, so a focus on efficiency */

.center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.justify-start {
    justify-content: flex-start;
}

.justify-end {
    justify-content: flex-end;
}

.justify-between {
    justify-content: space-between;
}

.justify-around {
    justify-content: space-around;
}

.justify-even {
    justify-content: space-evenly;
}

.align-start {
    align-items: flex-start ;
}

.align-end {
    align-items: flex-end;
}

.align-center {
    align-items: center;
}

.align-stretch {
    align-items: stretch;
}

/* flex-item style atoms */
.self-start {
    align-self: flex-start;
}

.self-end {
    align-self: flex-end;
}

.self-center {
    align-self: center;
}

.self-stretch {
    align-self: stretch;
    /* need to override set height of 300px for our class item so it can stretch */
    height: auto;
    
}
/* Responsive breakpoint */
/* If the screen is less than or equal to 768px, apply these styles */
@media screen and (max-width:768px) {
    .container {
        flex-direction: column;
        /* get all flex items within container to stretch and fill */
        align-items: stretch;
    }
    /* we need to override the fixed width of 300px that we mentioned above
    so that it can stretch in column mode */
    .item {
        height: 300px;
        width: auto;
        margin: 1rem;
    }
}

/* classic layout example */
header {
    width: 100%;
    min-height: 100px;
    background-color: aqua;
}

.wrapper {
    display: flex;
    flex-direction: row;
}

.grid-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
    background-color: darkcyan;
}

.grid-item {
    width: 23%;
    margin: 1%;
}

.secondary-nav {
    min-width: 25%;
    background-color: aquamarine;
}

/* can say ul.menu, but in this case you can just say .menu */
.menu {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

.menu li {
    border-bottom: 1px solid grey;
}

.menu a {
    text-decoration: none;
    font-weight: 600;
    color: #111;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
}

.menu a:hover {
    background-color: rgba(0, 0, 0, .1);
}

footer {
    background-color: coral;
    min-height: 100px;
    justify-items: center;
}

footer h2 {
    margin: 0;
}

@media screen and (max-width: 1024px) {
    .grid-item {
        width: 48%;
    }    
}

/* Phone Size */
@media screen and (max-width: 768px) {
    .wrapper {
        flex-direction: column;
    }
    .secondary-nav{
        order: 1; /*this only works for flexbox b/c its a flexbox property*/
    }    
    .grid-container {
        order: 2; /* once you order something, you have to order them all */
        flex-direction: column;
    }

    .grid-item {
        width: 95%;
    }
}